{"version":3,"file":"router.mjs","sources":["../../utils/dist/utils.mjs"],"sourcesContent":["function createEventEmitter() {\n  const listeners = [];\n  return {\n    addListener,\n    emit,\n    removeListener,\n  };\n  function addListener(type, handler) {\n    const listener = { handler, type };\n    listeners.push(listener);\n  }\n  function emit(type, data) {\n    let listener;\n    for (listener of listeners) {\n      if (listener.type !== type) {\n        continue;\n      }\n      listener.handler(data);\n    }\n  }\n  function removeListener(type, handler) {\n    const ndx = listeners.findIndex((l) => type === l.type && handler === l.handler);\n    if (ndx !== -1) {\n      listeners.splice(ndx, 1);\n    }\n  }\n}\n\nfunction createAsyncQueue() {\n  const entries = [];\n  let flushing = false;\n  return {\n    add,\n    clear,\n    flush,\n  };\n  function add(fn, ...params) {\n    let rej = () => {};\n    let res = () => {};\n    const promise = new Promise((resolve, reject) => {\n      res = resolve;\n      rej = reject;\n    });\n    entries.push({\n      fn,\n      params,\n      reject: rej,\n      resolve: res,\n    });\n    return promise;\n  }\n  function clear() {\n    flushing = false;\n    entries.length = 0;\n  }\n  async function flush() {\n    if (flushing) {\n      return;\n    }\n    const entry = entries[0];\n    if (!entry) {\n      flushing = false;\n      return;\n    }\n    flushing = true;\n    try {\n      const result = await entry.fn(...entry.params);\n      entry.resolve(result);\n      entries.shift();\n      if (entries.length === 0) {\n        flushing = false;\n      }\n      return flush();\n    } catch (e) {\n      entry.reject(e);\n    }\n  }\n}\n\nfunction createSyncQueue() {\n  const entries = [];\n  let flushing = false;\n  return {\n    add,\n    flush,\n  };\n  function add(fn, ...params) {\n    entries.push({\n      fn,\n      params,\n    });\n  }\n  function flush() {\n    if (flushing) {\n      return;\n    }\n    const entry = entries.shift();\n    if (!entry) {\n      flushing = false;\n      return;\n    }\n    flushing = true;\n    entry.fn(...entry.params);\n    if (entries.length) {\n      return flush();\n    }\n  }\n}\n\nexport { createAsyncQueue, createEventEmitter, createSyncQueue };\n//# sourceMappingURL=utils.mjs.map\n"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,kBAAkB,GAAG;AAC9B,EAAE,MAAM,SAAS,GAAG,EAAE,CAAC;AACvB,EAAE,OAAO;AACT,IAAI,WAAW;AACf,IAAI,IAAI;AACR,IAAI,cAAc;AAClB,GAAG,CAAC;AACJ,EAAE,SAAS,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE;AACtC,IAAI,MAAM,QAAQ,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACvC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7B,GAAG;AACH,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE;AAC5B,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,KAAK,QAAQ,IAAI,SAAS,EAAE;AAChC,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;AAClC,QAAQ,SAAS;AACjB,OAAO;AACP,MAAM,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC7B,KAAK;AACL,GAAG;AACH,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;AACzC,IAAI,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;AACrF,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;AACpB,MAAM,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}