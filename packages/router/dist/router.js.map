{"version":3,"file":"router.js","sources":["../../utils/dist/utils.mjs"],"sourcesContent":["function createEventEmitter() {\n  const listeners = [];\n  return {\n    addListener,\n    emit,\n    removeListener,\n  };\n  function addListener(type, handler) {\n    const listener = { handler, type };\n    listeners.push(listener);\n  }\n  function emit(type, data) {\n    let listener;\n    const promises = [];\n    for (listener of listeners) {\n      if (listener.type !== type) {\n        continue;\n      }\n      const result = listener.handler(data);\n      if (result.then) {\n        promises.push(result);\n      }\n    }\n    return Promise.all(promises);\n  }\n  function removeListener(type, handler) {\n    const ndx = listeners.findIndex((l) => type === l.type && handler === l.handler);\n    if (ndx !== -1) {\n      listeners.splice(ndx, 1);\n    }\n  }\n}\n\nfunction createAsyncQueue() {\n  const entries = [];\n  let flushing = false;\n  return {\n    add,\n    clear,\n    flush,\n  };\n  function add(fn, ...params) {\n    let rej = () => {};\n    let res = () => {};\n    const promise = new Promise((resolve, reject) => {\n      res = resolve;\n      rej = reject;\n    });\n    entries.push({\n      fn,\n      params,\n      reject: rej,\n      resolve: res,\n    });\n    return promise;\n  }\n  function clear() {\n    flushing = false;\n    entries.length = 0;\n  }\n  async function flush() {\n    if (flushing) {\n      return;\n    }\n    const entry = entries[0];\n    if (!entry) {\n      return;\n    }\n    flushing = true;\n    try {\n      const result = await entry.fn(...entry.params);\n      entry.resolve(result);\n      entries.shift();\n      flushing = false;\n      return flush();\n    } catch (e) {\n      entry.reject(e);\n    }\n  }\n}\n\nfunction createSyncQueue() {\n  const entries = [];\n  let flushing = false;\n  return {\n    add,\n    flush,\n  };\n  function add(fn, ...params) {\n    entries.push({\n      fn,\n      params,\n    });\n  }\n  function flush() {\n    if (flushing) {\n      return;\n    }\n    const entry = entries.shift();\n    if (!entry) {\n      flushing = false;\n      return;\n    }\n    flushing = true;\n    entry.fn(...entry.params);\n    if (entries.length) {\n      return flush();\n    }\n  }\n}\n\nexport { createAsyncQueue, createEventEmitter, createSyncQueue };\n//# sourceMappingURL=utils.mjs.map\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;EAAA,SAAS,kBAAkB,GAAG;EAC9B,EAAE,MAAM,SAAS,GAAG,EAAE,CAAC;EACvB,EAAE,OAAO;EACT,IAAI,WAAW;EACf,IAAI,IAAI;EACR,IAAI,cAAc;EAClB,GAAG,CAAC;EACJ,EAAE,SAAS,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE;EACtC,IAAI,MAAM,QAAQ,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;EACvC,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC7B,GAAG;EACH,EAAE,SAAS,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE;EAC5B,IAAI,IAAI,QAAQ,CAAC;EACjB,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;EACxB,IAAI,KAAK,QAAQ,IAAI,SAAS,EAAE;EAChC,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;EAClC,QAAQ,SAAS;EACjB,OAAO;EACP,MAAM,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;EAC5C,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;EACvB,QAAQ,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC9B,OAAO;EACP,KAAK;EACL,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EACjC,GAAG;EACH,EAAE,SAAS,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;EACzC,IAAI,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;EACrF,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;EACpB,MAAM,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;EAC/B,KAAK;EACL,GAAG;EACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}